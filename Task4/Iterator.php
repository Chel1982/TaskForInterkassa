<pre>
<?php
abstract class Block
{
    abstract function render();
}
class TextBlock extends Block
{
    public function render()
    {
        require_once("views/Text.html");
    }
}
class ImageBlock extends Block
{
    public function render()
    {
        require_once("views/Image.html");
    }
}
class ButtonBlock extends Block
{
    public function render()
    {
        require_once("views/Button.html");
    }
}
abstract class CompositeBlock extends Block
{
    protected $obj = array();
    public function addObj(Block $block)
    {
        array_push ($this -> obj , $block);
    }
    public function renderComposition()
    {
        foreach($this -> obj as $item){
            echo $item->render();
        }
    }
    public function getComposite()
    {
        return $this;
    }
    public function getArray()
    {
        return $this -> obj;
    }
}
class CreateBlock extends CompositeBlock
{
    public function addObj(Block $block)
    {
        parent::addObj($block); // TODO: Change the autogenerated stub
    }
    public function renderComposition()
    {
        parent::renderComposition(); // TODO: Change the autogenerated stub
    }
    public function render()
    {
        // TODO: Implement render() method.
    }
    public function getArray()
    {
        parent::getArray();
    }

}

class MyIterator implements Iterator
{
    private $arr = array();

    public function __construct(CompositeBlock $array)
    {
        $this -> arr = $array;
    }
    public function rewind() {

        reset($this->arr);
    }

    public function current() {
        $arr = current($this->arr);
        return $arr;
    }

    public function key() {
        $arr = key($this->arr);
        return $arr;
    }

    public function next() {
        $arr = next($this->arr);
        return $arr;
    }

    public function valid() {
        $arr = $this->current() !== false;
        return $arr;
    }
}

$block = new CreateBlock();
$block -> addObj(new TextBlock);
$block -> addObj(new ImageBlock);
var_dump($block);

$it = new MyIterator($block);

foreach ($it as $a) {
   var_dump($a);
}
